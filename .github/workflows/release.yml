name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: server
            compile_cmd: gcc -o server server.c
            release_name: website-Linux-x86_64
          - os: windows-latest
            artifact_name: server.exe
            compile_cmd: gcc -o server.exe server.c -lws2_32
            release_name: website-Windows-AMD64
          - os: macos-latest
            artifact_name: server
            compile_cmd: clang -arch x86_64 -o server server.c
            release_name: website-MacOS-x86_64
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Compile
      run: ${{ matrix.compile_cmd }}
    
    - name: Prepare Release
      shell: bash
      run: |
        mkdir -p release
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          mkdir release_contents
          cp -r * release_contents/ 2>/dev/null || :
          rm -rf release_contents/release
          powershell -Command "Compress-Archive -Path 'release_contents\*' -DestinationPath 'release\${{ matrix.release_name }}_Release.zip' -Force"
        else
          mkdir temp_release
          cp -r * temp_release/ 2>/dev/null || :
          rm -rf temp_release/release
          cd temp_release && zip -r ../release/${{ matrix.release_name }}_Release.zip . && cd ..
          rm -rf temp_release
        fi
    
    - name: Upload Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload "${{ github.ref_name }}" release/${{ matrix.release_name }}_Release.zip
